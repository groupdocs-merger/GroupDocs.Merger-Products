{
  "code_samples": {
    "title": "コードサンプル",
    "description": "Node.jsにおけるGroupDocs.Mergerの一般的なユースケースを探ります。これらの例は、Node.js用のGroupDocs.Mergerを使用して文書を効率的にマージおよび分割する方法を示しています。",
    "sample_1": {
      "title": "Node.jsで複数のDOCXファイルを1つの文書にマージする",
      "content_1": "Node.js用のGroupDocs.Mergerを使用して、複数のDOCXファイルをシームレスに1つの文書に統合します。[Word文書のマージ](https://docs.groupdocs.com/merger/nodejs-java/merge/word/)機能は、ファイルを効率的にマージすることで文書管理を簡素化します。",
      "content_2": "以下は、マージプロセスを示すNode.jsのコードスニペットです。",
      "code_title": "例: Node.jsでDOCXファイルをマージする",
      "comment_1": "最初のDOCXファイルをロードする",
      "comment_2": "マージする追加のDOCXファイルを追加する",
      "comment_3": "DOCXファイルをマージして出力を保存する"
    },
    "sample_2": {
      "title": "Node.jsでPDF文書を複数のファイルに分割する",
      "content_1": "Node.js用のGroupDocs.Mergerは、大きなPDF文書を小さなファイルに分割するのを容易にします。[文書を分割](https://docs.groupdocs.com/merger/nodejs-java/split-document/)機能は、ページ範囲、開始/終了ページ、または奇数/偶数ページなどのさまざまな基準に基づいて特定のページを抽出できます。",
      "content_2": "この機能は、大きな文書をより管理しやすい小さなファイルに分割することで整理を助けます。",
      "code_title": "Node.jsでPDFを別々のファイルに分割する方法",
      "comment_1": "Node.js用のGroupDocs.Mergerを使用してPDFファイルを分割する",
      "comment_2": "希望の出力形式を持つSplitOptionsを定義する",
      "comment_3": "入力PDF文書でMergerを初期化する",
      "comment_4": "SplitOptionsオブジェクトを使用して分割メソッドを呼び出し、別々のファイルを生成する"
    }
  }
}