{
  "code_samples": {
    "title": "Code samples",
    "description": "Explore common use cases for GroupDocs.Merger in Node.js. These examples demonstrate how to efficiently merge and split documents using GroupDocs.Merger for Node.js.",
    "sample_1": {
      "title": "Merge multiple DOCX files into one document in Node.js",
      "content_1": "Use GroupDocs.Merger for Node.js to seamlessly combine multiple DOCX files into a single document. The [Merge Word Documents](https://docs.groupdocs.com/merger/nodejs-java/merge/word/) feature simplifies document management by merging files efficiently.",
      "content_2": "Below is a Node.js code snippet demonstrating the merging process:",
      "code_title": "Example: Merging DOCX files in Node.js",
      "comment_1": "Load the first DOCX file",
      "comment_2": "Add additional DOCX files to merge",
      "comment_3": "Merge the DOCX files and save the output"
    },
    "sample_2": {
      "title": "Split a PDF document into multiple files in Node.js",
      "content_1": "GroupDocs.Merger for Node.js makes it easy to split large PDF documents into smaller files. The [Split Document](https://docs.groupdocs.com/merger/nodejs-java/split-document/) feature allows you to extract specific pages based on different criteria, such as page range, start/end pages, or odd/even pages.",
      "content_2": "This feature helps organize large documents by breaking them into smaller, more manageable files.",
      "code_title": "How to split a PDF into separate files in Node.js",
      "comment_1": "Use GroupDocs.Merger for Node.js to split the PDF file",
      "comment_2": "Define SplitOptions with the desired output format",
      "comment_3": "Initialize the Merger with the input PDF document",
      "comment_4": "Call the split method with the SplitOptions object to generate separate files"
    }
  }
}
