{
  "code_samples": {
    "title": "코드 샘플",
    "description": "Node.js에서 GroupDocs.Merger의 일반적인 사용 사례를 탐색하십시오. 이러한 예제는 GroupDocs.Merger for Node.js를 사용하여 문서를 효율적으로 병합하고 분할하는 방법을 보여줍니다.",
    "sample_1": {
      "title": "Node.js에서 여러 DOCX 파일을 하나의 문서로 병합하기",
      "content_1": "Node.js의 GroupDocs.Merger를 사용하여 여러 DOCX 파일을 하나의 문서로 원활하게 결합합니다. [워드 문서 병합](https://docs.groupdocs.com/merger/nodejs-java/merge/word/) 기능은 파일을 효율적으로 병합하여 문서 관리를 간소화합니다.",
      "content_2": "아래는 병합 프로세스를 보여주는 Node.js 코드 스니펫입니다:",
      "code_title": "예제: Node.js에서 DOCX 파일 병합",
      "comment_1": "첫 번째 DOCX 파일을 로드합니다",
      "comment_2": "병합할 추가 DOCX 파일을 추가합니다",
      "comment_3": "DOCX 파일을 병합하고 출력을 저장합니다"
    },
    "sample_2": {
      "title": "Node.js에서 PDF 문서를 여러 파일로 분할하기",
      "content_1": "Node.js용 GroupDocs.Merger를 사용하면 큰 PDF 문서를 더 작은 파일로 분할할 수 있습니다. [문서 분할](https://docs.groupdocs.com/merger/nodejs-java/split-document/) 기능을 통해 페이지 범위, 시작/끝 페이지 또는 홀수/짝수 페이지 등 다양한 기준에 따라 특정 페이지를 추출할 수 있습니다.",
      "content_2": "이 기능은 큰 문서를 더 작고 관리하기 쉬운 파일로 나누어 정리하는 데 도움이 됩니다.",
      "code_title": "Node.js에서 PDF를 개별 파일로 분할하는 방법",
      "comment_1": "Node.js의 GroupDocs.Merger를 사용하여 PDF 파일을 분할합니다",
      "comment_2": "원하는 출력 형식으로 SplitOptions을 정의합니다",
      "comment_3": "입력 PDF 문서로 Merger를 초기화합니다",
      "comment_4": "SplitOptions 객체와 함께 split 메서드를 호출하여 개별 파일을 생성합니다"
    }
  }
}